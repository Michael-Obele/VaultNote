name: Release & Build Tauri

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      bump:
        description: "Force version bump type"
        required: false
        type: choice
        options: ["patch", "minor", "major"]

jobs:
  release-please:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          release-type: rust
          default-branch: main
          bump-minor-pre-major: true
          # Tell release-please to manage Cargo.toml, package.json AND tauri.conf.json
          extra-files: |
            src-tauri/tauri.conf.json
            package.json
          changelog-types: |
            [
              {"type":"feat","section":"Features","hidden":false},
              {"type":"fix","section":"Bug Fixes","hidden":false},
              {"type":"perf","section":"Performance","hidden":false},
              {"type":"BREAKING CHANGE","section":"BREAKING","hidden":false}
            ]
          bump-type: ${{ github.event.inputs.bump || null }}

  # --------------------------------------------------------------
  # Desktop builds (Windows, macOS, Linux)
  # --------------------------------------------------------------
  publish-tauri:
    needs: release-please
    if: ${{ needs.release-please.outputs.releases_created == 'true' }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest"
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04"
            args: ""
          - platform: "windows-latest"
            args: ""
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.release-please.outputs.tag_name }}

      - name: Install system deps (Ubuntu)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - run: bun install

      - name: Build web assets
        env:
          VITE_LOGIN_URL: ${{ secrets.VITE_LOGIN_URL }}
        run: bun run vite build

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VITE_LOGIN_URL: ${{ secrets.VITE_LOGIN_URL }}
        with:
          tagName: ${{ needs.release-please.outputs.tag_name }}
          releaseName: "VaultNote ${{ needs.release-please.outputs.tag_name }}"
          releaseBody: "See the assets below to download and install."
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}

  # --------------------------------------------------------------
  # Android APK build (runs on Ubuntu only)
  # --------------------------------------------------------------
  publish-android:
    needs: release-please
    if: ${{ needs.release-please.outputs.releases_created == 'true' }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.release-please.outputs.tag_name }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Android SDK & NDK
        uses: android-actions/setup-android@v3
      - run: |
          sdkmanager --install "platforms;android-34" \
                               "build-tools;34.0.0" \
                               "ndk;25.2.9519653"

      - name: Export NDK_HOME
        shell: bash
        run: echo "NDK_HOME=$ANDROID_NDK_ROOT" >> $GITHUB_ENV

      - name: Setup Rust + Android targets
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android,armv7-linux-androideabi,i686-linux-android,x86_64-linux-android

      - uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - run: cargo install tauri-cli --version ^2.0

      - run: bun install

      - name: Build web assets
        env:
          VITE_LOGIN_URL: ${{ secrets.VITE_LOGIN_URL }}
        run: bun run vite build

      - name: Decode signing keystore
        shell: bash
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 -d > vaultnote-release.keystore

      - name: Build signed APK
        shell: bash
        run: |
          cd src-tauri
          export ANDROID_KEYSTORE_PATH="${GITHUB_WORKSPACE}/vaultnote-release.keystore"
          export ANDROID_KEYSTORE_PASSWORD="${{ secrets.ANDROID_KEYSTORE_PASSWORD }}"
          export ANDROID_KEY_ALIAS="${{ secrets.ANDROID_KEY_ALIAS }}"
          export ANDROID_KEY_PASSWORD="${{ secrets.ANDROID_KEY_PASSWORD }}"
          cargo tauri android build -- --release

      - name: Upload APK
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.release-please.outputs.tag_name }}
          files: |
            src-tauri/target/release/bundle/android/app-release.apk
            src-tauri/target/release/bundle/android/app-release-signed.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
