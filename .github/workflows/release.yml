name: Publish VaultNote (Linux, Android, Windows)

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Version bump type (patch, minor)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor

permissions:
  contents: write

concurrency:
  group: publish-vaultnote-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish-tauri-linux:
    runs-on: ubuntu-22.04
    outputs:
      new_tag: ${{ steps.bump_version.outputs.new_tag }}
      clean_version: ${{ steps.set_clean_version.outputs.clean_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf build-essential curl libssl-dev libgtk-3-dev rpm
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 'latest'
      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: 'x86_64-unknown-linux-gnu'
      - name: Cache Rust artifacts
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
      - name: Install frontend dependencies
        run: bun install
      - name: Install json for version update
        run: bun add -g json
      - name: Bump version
        id: bump_version
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{ github.event.inputs.version_bump || 'patch' }}
          release_branches: main
          tag_prefix: vaultnote-v
          branch_history: compare
          bump_policy: 'default'
      - name: Set clean version
        id: set_clean_version
        run: |
          CLEAN_VERSION=${{ steps.bump_version.outputs.new_tag }}
          CLEAN_VERSION=${CLEAN_VERSION#vaultnote-v}
          echo "clean_version=$CLEAN_VERSION" >> $GITHUB_OUTPUT
      - name: Update tauri.conf.json version
        run: |
          bunx --bun json -I -f src-tauri/tauri.conf.json -e "this.version='${{ steps.set_clean_version.outputs.clean_version }}'"
      - name: Commit version changes
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add src-tauri/tauri.conf.json
          git commit -m "ci: version bump to ${{ steps.bump_version.outputs.new_tag }} [skip ci]" || true
          git push || true
      - name: Create bundle directories
        run: |
          mkdir -p src-tauri/target/release/bundle/deb
          mkdir -p src-tauri/target/release/bundle/appimage
          mkdir -p src-tauri/target/release/bundle/rpm
      - name: Build frontend
        env:
          VITE_LOGIN_URL: ${{ secrets.VITE_LOGIN_URL }}
        run: bun run vite build
      - name: Build
        uses: tauri-apps/tauri-action@v0.5
        with:
          tagName: ${{ steps.bump_version.outputs.new_tag }}
          releaseName: VaultNote v${{ steps.bump_version.outputs.new_tag }}
          releaseBody: See the assets to download this version and install.
          releaseDraft: true
          prerelease: false
          appVersion: ${{ steps.set_clean_version.outputs.clean_version }}
          args: --target x86_64-unknown-linux-gnu --bundles deb,appimage,rpm
      - name: Move artifacts to bundle directories
        run: |
          find src-tauri/target -name "vaultnote_*_${{ steps.set_clean_version.outputs.clean_version }}_*.deb" -exec mv {} src-tauri/target/release/bundle/deb/ \;
          find src-tauri/target -name "vaultnote_*_${{ steps.set_clean_version.outputs.clean_version }}_*.AppImage" -exec mv {} src-tauri/target/release/bundle/appimage/ \;
          find src-tauri/target -name "vaultnote-*${{ steps.set_clean_version.outputs.clean_version }}-*.rpm" -exec mv {} src-tauri/target/release/bundle/rpm/ \;
      - name: Verify artifacts
        run: ls -R src-tauri/target/release/bundle
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vaultnote-ubuntu
          path: src-tauri/target/release/bundle/**
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.bump_version.outputs.new_tag }}
          name: VaultNote ${{ steps.set_clean_version.outputs.clean_version }}
          body: See the assets to download this version and install.
          draft: false
          prerelease: false
          files: |
            src-tauri/target/release/bundle/deb/*
            src-tauri/target/release/bundle/appimage/*
            src-tauri/target/release/bundle/rpm/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-tauri-android:
    runs-on: ubuntu-22.04
    needs: publish-tauri-linux
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Install Android dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Cache Android SDK
        uses: actions/cache@v4
        with:
          path: /usr/local/lib/android/sdk
          key: ${{ runner.os }}-android-sdk-${{ hashFiles('**/*.yml') }}
          restore-keys: |
            ${{ runner.os }}-android-sdk-
      - name: Setup Android SDK and NDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: '8512546'
          accept-android-sdk-licenses: true
          packages: platforms;android-34 build-tools;34.0.0 ndk;26.1.10909125
      - name: Verify Android NDK path
        run: ls -l /usr/local/lib/android/sdk/ndk/26.1.10909125 || echo "NDK path not found"
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 'latest'
      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: 'aarch64-linux-android,armv7-linux-androideabi,i686-linux-android,x86_64-linux-android'
      - name: Cache Rust artifacts
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
      - name: Install frontend dependencies
        run: bun install
      - name: Install json for version update
        run: bun add -g json
      - name: Update tauri.conf.json version
        run: |
          bunx --bun json -I -f src-tauri/tauri.conf.json -e "this.version='${{ needs.publish-tauri-linux.outputs.clean_version }}'"
      - name: Create bundle directories
        run: |
          mkdir -p src-tauri/target/release/bundle/apk
          mkdir -p src-tauri/target/release/bundle/aab
      - name: Build frontend
        env:
          VITE_LOGIN_URL: ${{ secrets.VITE_LOGIN_URL }}
        run: bun run vite build
      - name: Build
        uses: tauri-apps/tauri-action@v0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JAVA_HOME: /usr/lib/jvm/temurin-17-jdk-amd64
          ANDROID_HOME: /usr/local/lib/android/sdk
          ANDROID_NDK_HOME: /usr/local/lib/android/sdk/ndk/26.1.10909125
        with:
          tagName: ${{ needs.publish-tauri-linux.outputs.new_tag }}
          releaseName: VaultNote v${{ needs.publish-tauri-linux.outputs.new_tag }}
          releaseBody: See the assets to download this version and install.
          releaseDraft: true
          prerelease: false
          appVersion: ${{ needs.publish-tauri-linux.outputs.clean_version }}
          args: --target aarch64-linux-android --bundles apk,aab
      - name: Move artifacts to bundle directories
        run: |
          find src-tauri/target -name "vaultnote_*_${{ needs.publish-tauri-linux.outputs.clean_version }}_*.apk" -exec mv {} src-tauri/target/release/bundle/apk/ \;
          find src-tauri/target -name "vaultnote_*_${{ needs.publish-tauri-linux.outputs.clean_version }}_*.aab" -exec mv {} src-tauri/target/release/bundle/aab/ \;
      - name: Verify artifacts
        run: ls -R src-tauri/target/release/bundle
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vaultnote-android
          path: src-tauri/target/release/bundle/**
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.publish-tauri-linux.outputs.new_tag }}
          name: VaultNote ${{ needs.publish-tauri-linux.outputs.clean_version }}
          body: See the assets to download this version and install.
          draft: false
          prerelease: false
          files: |
            src-tauri/target/release/bundle/apk/*
            src-tauri/target/release/bundle/aab/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-tauri-windows:
    runs-on: windows-latest
    needs: publish-tauri-linux
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 'latest'
      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: 'x86_64-pc-windows-msvc'
      - name: Cache Rust artifacts
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
      - name: Install frontend dependencies
        run: bun install
      - name: Install json for version update
        run: bun add -g json
      - name: Update tauri.conf.json version
        run: |
          bunx --bun json -I -f src-tauri/tauri.conf.json -e "this.version='${{ needs.publish-tauri-linux.outputs.clean_version }}'"
      - name: Create bundle directories
        shell: bash
        run: |
          mkdir -p src-tauri/target/release/bundle/msi
          mkdir -p src-tauri/target/release/bundle/nsis
      - name: Build frontend
        env:
          VITE_LOGIN_URL: ${{ secrets.VITE_LOGIN_URL }}
        run: bun run vite build
      - name: Build
        uses: tauri-apps/tauri-action@v0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ needs.publish-tauri-linux.outputs.new_tag }}
          releaseName: VaultNote v${{ needs.publish-tauri-linux.outputs.new_tag }}
          releaseBody: See the assets to download this version and install.
          releaseDraft: true
          prerelease: false
          appVersion: ${{ needs.publish-tauri-linux.outputs.clean_version }}
          args: --target x86_64-pc-windows-msvc --bundles msi,nsis
      - name: Move artifacts to bundle directories
        shell: bash
        run: |
          find src-tauri/target -name "vaultnote_*_${{ needs.publish-tauri-linux.outputs.clean_version }}_*_x64_en-US.msi" -exec mv {} src-tauri/target/release/bundle/msi/ \;
          find src-tauri/target -name "vaultnote_*_${{ needs.publish-tauri-linux.outputs.clean_version }}_*_x64-setup.exe" -exec mv {} src-tauri/target/release/bundle/nsis/ \;
      - name: Verify artifacts
        shell: powershell
        run: Get-ChildItem -Recurse src-tauri/target/release/bundle
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vaultnote-windows
          path: src-tauri/target/release/bundle/**
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.publish-tauri-linux.outputs.new_tag }}
          name: VaultNote ${{ needs.publish-tauri-linux.outputs.clean_version }}
          body: See the assets to download this version and install.
          draft: false
          prerelease: false
          files: |
            src-tauri/target/release/bundle/msi/*
            src-tauri/target/release/bundle/nsis/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
